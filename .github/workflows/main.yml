name: Ruby on Rails Specs

on:
  push:
    branches:
      - master

jobs:
  test:
    name: Rspec
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.9
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: personal_blog_test
          PGUSER: postgres
          PGPASSWORD: postgres

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2
        bundler-cache: true 

    - name: Install dependencies
      run: |
        gem install bundler
        bundle install

    - name: Start PostgreSQL service
      run: |
        sudo service postgresql start

    - name: Check PostgreSQL status
      run: |
        systemctl status postgresql

    - name: Create PostgreSQL user
      run: |
        sudo -u postgres createuser runner -s
      
    - name: Set up database
      run: |
        sleep 5
        bundle exec rake db:create RAILS_ENV=test
        bundle exec rake db:migrate RAILS_ENV=test

    - name: Run tests
      run: |
        bundle exec rspec

    - name: fix code coverage paths
      working-directory: ./coverage
        # ruby -rjson -e 'sqube = JSON.load(File.read("coverage/.resultset.json"))["RSpec"]["coverage"].transform_values {|lines| lines["lines"]}; total = { "RSpec" => { "coverage" => sqube, "timestamp" => Time.now.to_i }}; puts JSON.dump(total)' > coverage/.resultset.solarqube.json
      run: |
        sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace/@g' coverage.json


  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          args:
            -Dsonar.projectKey=igrrsantos_personal_blog
            -Dsonar.organization=igrrsantos
            -Dsonar.language=ruby
            -Dsonar.exclusions=**/*_spec.rb
            -Dsonar.ruby.coverage.reportPaths=coverage/coverage.json
